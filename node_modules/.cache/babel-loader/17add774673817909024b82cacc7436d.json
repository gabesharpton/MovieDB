{"ast":null,"code":"var _jsxFileName = \"/Users/3bag/Code/moviedb/src/MovieDetail.js\";\nimport React, { Component } from 'react';\nconst POSTER_PATH = 'http://image.tmdb.org/t/p/w154';\nconst BACKDROP_PATH = 'http://image.tmdb.org/t/p/w1280';\n\nrequire('dotenv').config();\n\nclass MovieDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: {}\n    };\n  }\n\n  async componentDidMount() {\n    console.log(process.env.API_KEY);\n\n    try {\n      const api = process.env.API_KEY;\n      const res = await fetch(`https://api.themoviedb.org/3/movie/${this.props.match.params.id}?api_key=${process}&language=en-US`);\n      const movie = await res.json();\n      console.log(movie);\n      this.setState({\n        movie\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    const movie = this.state.movie;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, movie.title), React.createElement(\"img\", {\n      src: `${POSTER_PATH}${movie.poster_path}`,\n      alt: movie.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: `${BACKDROP_PATH}${movie.backdrop_path}`,\n      alt: movie.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, movie.release_date), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, movie.overview));\n  }\n\n}\n\nexport default MovieDetail;","map":{"version":3,"sources":["/Users/3bag/Code/moviedb/src/MovieDetail.js"],"names":["React","Component","POSTER_PATH","BACKDROP_PATH","require","config","MovieDetail","state","movie","componentDidMount","console","log","process","env","API_KEY","api","res","fetch","props","match","params","id","json","setState","e","render","title","poster_path","backdrop_path","release_date","overview"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,WAAW,GAAG,gCAApB;AACA,MAAMC,aAAa,GAAG,iCAAtB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAElCM,KAFkC,GAE1B;AACNC,MAAAA,KAAK,EAAE;AADD,KAF0B;AAAA;;AAKlC,QAAMC,iBAAN,GAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,OAAxB;;AACA,QAAI;AACA,YAAMC,GAAG,GAAGH,OAAO,CAACC,GAAR,CAAYC,OAAxB;AACF,YAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,YAAWT,OAAQ,iBAArF,CAAvB;AACA,YAAMJ,KAAK,GAAG,MAAMQ,GAAG,CAACM,IAAJ,EAApB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,WAAKe,QAAL,CAAc;AACZf,QAAAA;AADY,OAAd;AAGD,KARD,CAQC,OAAMgB,CAAN,EAAS;AACRd,MAAAA,OAAO,CAACC,GAAR,CAAYa,CAAZ;AACC;AAEJ;;AAEDC,EAAAA,MAAM,GAAE;AAAA,UACEjB,KADF,GACY,KAAKD,KADjB,CACEC,KADF;AAER,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACkB,KAAX,CADF,EAEE;AAAK,MAAA,GAAG,EAAG,GAAExB,WAAY,GAAEM,KAAK,CAACmB,WAAY,EAA7C;AAAgD,MAAA,GAAG,EAAEnB,KAAK,CAACkB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAK,MAAA,GAAG,EAAG,GAAEvB,aAAc,GAAEK,KAAK,CAACoB,aAAc,EAAjD;AAAoD,MAAA,GAAG,EAAEpB,KAAK,CAACkB,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKlB,KAAK,CAACqB,YAAX,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIrB,KAAK,CAACsB,QAAV,CALF,CADF;AASD;;AAhCmC;;AAqCpC,eAAexB,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst POSTER_PATH = 'http://image.tmdb.org/t/p/w154'\nconst BACKDROP_PATH = 'http://image.tmdb.org/t/p/w1280'\nrequire('dotenv').config()\nclass MovieDetail extends Component {\n\n  state = {\n    movie: {}\n  }\n  async componentDidMount() {\n    console.log(process.env.API_KEY)\n    try {\n        const api = process.env.API_KEY\n      const res = await fetch(`https://api.themoviedb.org/3/movie/${this.props.match.params.id}?api_key=${process}&language=en-US`)\n      const movie = await res.json();\n      console.log(movie)\n      this.setState({\n        movie\n      })\n    }catch(e) {\n      console.log(e)\n      }\n    \n  }\n\n  render(){\n    const { movie } = this.state;\n  return (\n    <div>\n      <h1>{movie.title}</h1>\n      <img src={`${POSTER_PATH}${movie.poster_path}`} alt={movie.title}  />\n      <img src={`${BACKDROP_PATH}${movie.backdrop_path}`} alt={movie.title}  />\n      <h1>{movie.release_date}</h1>\n      <p>{movie.overview}</p>\n    </div>\n  );\n}\n}\n\n\n\nexport default MovieDetail;\n"]},"metadata":{},"sourceType":"module"}